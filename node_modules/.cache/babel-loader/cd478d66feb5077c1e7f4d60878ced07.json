{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js'; //-------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DEFAULT_SIZE = 500; //-------------------------------------------\n\nlet frameCountPerCicle = 200;\nlet CFrameCount, CQuartEaseInR, CQuartEaseOutR;\nlet CProgressR, CQuadEaseInR, CQuadEaseOutR;\nlet back,\n    back2,\n    dis = 120,\n    mapId,\n    landId;\nlet inconsolata, mapDefult;\nlet displace, mosaic, sobel;\nlet land = [],\n    landImg = [];\nlet jsonFile, img, pg;\nlet rr = 0,\n    gg = 0,\n    bb = 0; //-------------------------------------------\n\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75,\n  // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)'\n}) => {\n  _s();\n\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const {\n    hash\n  } = block; //-------------------------------------------\n\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height, p5.WEBGL).parent(canvasParentRef);\n\n    canvasRef.current = p5; //-------------------------------------------loading\n\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel = p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0] = p5.loadModel('model/cone3.obj');\n    land[1] = p5.loadModel('model/cube3.obj');\n    land[2] = p5.loadModel('model/cross2.obj');\n    land[3] = p5.loadModel('model/quad.obj');\n    landImg[0] = p5.loadImage(\"model/cone3.png\");\n    landImg[1] = p5.loadImage(\"model/cube3.png\");\n    landImg[2] = p5.loadImage(\"model/cross3.png\");\n    landImg[3] = p5.loadImage(\"model/quad4.png\");\n    mapDefult = p5.loadImage(\"model/map.png\");\n    jsonFile = p5.loadJSON(\"GeoPunk.json\");\n    pg = p5.createGraphics(640, 640); //-------------------------------------------setting\n\n    p5.easycam = p5.createEasyCam({\n      distance: dis,\n      center: [0, 5, 0]\n    });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata); //-------------------------------------------\n\n    attributesRef.current = () => {\n      return {\n        attributes: [{\n          display_type: 'number',\n          trait_type: 'your trait here number',\n          value: hoistedValue.current\n        }, {\n          trait_type: 'your trait here text',\n          value: 'replace me'\n        }]\n      };\n    };\n  };\n\n  const draw = p5 => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    rr = p5.red(color1) / 510;\n    gg = p5.green(color1) / 510;\n    bb = p5.blue(color1) / 510; //-------------------------------------------mainShape\n\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI / 180, width / height, 0.1, 5000);\n    back = p5.abs(p5.millis() % 6000 / 6000 - 0.5) - 0.5;\n    back2 = p5.millis() / 3000;\n    p5.rotateZ(back);\n    p5.rotateX(back);\n    p5.rotateY(back2); //------------------------------------------- reset shuffle bag\n\n    {\n      if (p5.frameCount < 30) {\n        p5.normalMaterial();\n        p5.sphere(10, 20, 20);\n      } else if (p5.frameCount == 30) {\n        //loading .png file\n        let seed = parseInt(hash.slice(0, 16), 16);\n        shuffleBag.current = new MersenneTwister(seed);\n        mapId = parseInt(shuffleBag.current.random() * 4);\n        landId = parseInt(shuffleBag.current.random() * 160);\n        console.log(jsonFile[landId]);\n        img = p5.loadImage(\"slitMap/\" + landId + \".png\");\n        hoistedValue.current = 42;\n      } else if (p5.frameCount > 30) {\n        pg.background(0);\n        if (img != null) pg.image(img, 0, 0, 640, 640);\n        pg.image(landImg[mapId], 0, 0, 640, 640);\n        p5.shader(displace);\n        displace.setUniform(\"colormap\", pg);\n        displace.setUniform(\"mapId\", mapId);\n        displace.setUniform(\"mod1\", mod1);\n        displace.setUniform(\"mod2\", mod2);\n        displace.setUniform(\"color1\", [rr, gg, bb]);\n        {\n          // post-effect-invert\n          let checkInvert = p5.frameCount % 600;\n          let checkNum;\n          if (checkInvert < 100) checkNum = Math.random();\n          if (checkNum > 0.8) displace.setUniform(\"n\", 0);else displace.setUniform(\"n\", 1);\n          displace.setUniform(\"uFrameCount\", p5.frameCount);\n        }\n        p5.scale(12);\n        p5.stroke(255);\n        p5.strokeWeight(2);\n\n        for (let i = 0; i < 100; i++) {\n          let e = p5.lerp(3, -3, i / 100);\n          p5.point(0, e, 0);\n        }\n\n        p5.noStroke();\n        p5.fill(255);\n        p5.model(land[mapId]);\n        p5.resetShader();\n      }\n    } //-------------------------------------------\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: handleResize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomStyle, \"eAcgvS7ZIhq58SkvxAYMJjr24hY=\");\n\n_c = CustomStyle;\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1: 'hsl(170,90%,30%)',\n    background: 'hsl(110,80%,10%)'\n  }\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomStyle\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js"],"names":["React","useRef","Sketch","MersenneTwister","Mappa","DEFAULT_SIZE","frameCountPerCicle","CFrameCount","CQuartEaseInR","CQuartEaseOutR","CProgressR","CQuadEaseInR","CQuadEaseOutR","back","back2","dis","mapId","landId","inconsolata","mapDefult","displace","mosaic","sobel","land","landImg","jsonFile","img","pg","rr","gg","bb","CustomStyle","block","canvasRef","attributesRef","width","height","handleResize","mod1","mod2","color1","background","shuffleBag","hoistedValue","hash","setup","p5","canvasParentRef","_p5","createCanvas","WEBGL","parent","current","loadFont","loadShader","loadModel","loadImage","loadJSON","createGraphics","easycam","createEasyCam","distance","center","setDistanceMin","setDistanceMax","textSize","textAlign","LEFT","CENTER","textFont","attributes","display_type","trait_type","value","draw","WIDTH","HEIGHT","DIM","Math","min","M","updateCProgress","red","green","blue","blendMode","BLEND","noStroke","perspective","PI","abs","millis","rotateZ","rotateX","rotateY","frameCount","normalMaterial","sphere","seed","parseInt","slice","random","console","log","image","shader","setUniform","checkInvert","checkNum","scale","stroke","strokeWeight","i","e","lerp","point","fill","model","resetShader","styleMetadata","name","description","creator_name","options","sq","pow"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js';\n//-------------------------------------------\nlet DEFAULT_SIZE = 500;\n//-------------------------------------------\nlet frameCountPerCicle = 200;\nlet CFrameCount,CQuartEaseInR,CQuartEaseOutR;\nlet CProgressR,CQuadEaseInR,CQuadEaseOutR;\nlet back,back2,dis=120,mapId,landId;\nlet inconsolata,mapDefult;\nlet displace,mosaic,sobel;\nlet land=[],landImg=[];\nlet jsonFile,img,pg;\nlet rr=0,gg=0,bb=0;\n//-------------------------------------------\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75, // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)',\n}) => {\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const { hash } = block;\n  //-------------------------------------------\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    canvasRef.current = p5;\n    //-------------------------------------------loading\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel=p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0]=p5.loadModel('model/cone3.obj');\n    land[1]=p5.loadModel('model/cube3.obj');\n    land[2]=p5.loadModel('model/cross2.obj');\n    land[3]=p5.loadModel('model/quad.obj');\n    landImg[0]=p5.loadImage(\"model/cone3.png\");\n    landImg[1]=p5.loadImage(\"model/cube3.png\");\n    landImg[2]=p5.loadImage(\"model/cross3.png\");\n    landImg[3]=p5.loadImage(\"model/quad4.png\");\n    mapDefult=p5.loadImage(\"model/map.png\");\n    jsonFile=p5.loadJSON(\"GeoPunk.json\");\n    pg = p5.createGraphics(640, 640);\n    //-------------------------------------------setting\n    p5.easycam = p5.createEasyCam({distance:dis,center: [0,5,0] });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata);\n    //-------------------------------------------\n    attributesRef.current = () => {\n      return {\n        attributes: [\n          {\n            display_type: 'number',\n            trait_type: 'your trait here number',\n            value: hoistedValue.current,\n          },\n          {\n            trait_type: 'your trait here text',\n            value: 'replace me',\n          },\n        ],\n      };\n    };\n  };\n\n  const draw = (p5) => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    rr=p5.red(color1)/510;\n    gg=p5.green(color1)/510;\n    bb=p5.blue(color1)/510;\n    //-------------------------------------------mainShape\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI/180, width/height, 0.1, 5000);\n    back=p5.abs(((p5.millis()%6000) / 6000)-0.5)-0.5;\n    back2=p5.millis() / 3000;\n    p5.rotateZ(back);\n    p5.rotateX(back);\n    p5.rotateY(back2);\n    //------------------------------------------- reset shuffle bag\n    {\n      if(p5.frameCount<30){\n        p5.normalMaterial();\n        p5.sphere(10,20,20);\n      } else if(p5.frameCount==30){//loading .png file\n        let seed = parseInt(hash.slice(0, 16), 16);\n        shuffleBag.current = new MersenneTwister(seed);\n        mapId   = parseInt(shuffleBag.current.random()*4);\n        landId  = parseInt(shuffleBag.current.random()*160);\n        console.log(jsonFile[landId]);\n        img=p5.loadImage(\"slitMap/\"+landId+\".png\");\n        hoistedValue.current = 42;\n      }else if(p5.frameCount>30){\n        pg.background(0);\n        if(img != null)pg.image(img,0,0,640,640);\n        pg.image(landImg[mapId],0,0,640,640);\n        p5.shader(displace);\n        displace.setUniform(\"colormap\", pg);\n        displace.setUniform(\"mapId\", mapId);\n        displace.setUniform(\"mod1\", mod1);\n        displace.setUniform(\"mod2\", mod2);\n        displace.setUniform(\"color1\", [rr,gg,bb]);\n        { // post-effect-invert\n          let checkInvert=(p5.frameCount%600);\n          let checkNum;\n          if(checkInvert<100)checkNum=Math.random();\n          if(checkNum>0.8)displace.setUniform(\"n\", 0);\n          else displace.setUniform(\"n\", 1);\n          displace.setUniform(\"uFrameCount\", p5.frameCount);\n        }\n        p5.scale(12);\n        p5.stroke(255);\n        p5.strokeWeight(2);\n        for(let i=0;i<100;i++){\n          let e = p5.lerp(3, -3, i/100);\n          p5.point(0,e,0);\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.model(land[mapId]);\n        p5.resetShader();\n      }\n    }\n    //-------------------------------------------\n  };\n\n  return <Sketch setup={setup} draw={draw} windowResized={handleResize} />;\n};\n\nexport default CustomStyle;\n\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1 : 'hsl(170,90%,30%)',\n    background : 'hsl(110,80%,10%)'\n  },\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n"]},"metadata":{},"sourceType":"module"}