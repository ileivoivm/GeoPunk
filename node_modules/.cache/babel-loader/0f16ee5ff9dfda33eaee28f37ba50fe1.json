{"ast":null,"code":"import { useState, useRef, useEffect, useCallback } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar observerErr = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nvar borderBoxWarn = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\nvar getCurrentBreakpoint = function getCurrentBreakpoint(bps, w) {\n  var curBp = \"\";\n  var max = -1;\n  Object.keys(bps).forEach(function (key) {\n    var val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n  return curBp;\n};\n\nvar useDimensions = function useDimensions(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      refOpt = _ref.ref,\n      useBorderBoxSize = _ref.useBorderBoxSize,\n      breakpoints = _ref.breakpoints,\n      updateOnBreakpointChange = _ref.updateOnBreakpointChange,\n      shouldUpdate = _ref.shouldUpdate,\n      onResize = _ref.onResize,\n      polyfill = _ref.polyfill;\n\n  var _useState = useState({\n    currentBreakpoint: \"\",\n    width: 0,\n    height: 0\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var prevSizeRef = useRef({});\n  var prevBreakpointRef = useRef();\n  var observerRef = useRef(null);\n  var onResizeRef = useRef(null);\n  var shouldUpdateRef = useRef(null);\n  var warnedRef = useRef(false);\n  var refVar = useRef(null);\n  var ref = useRef(refVar == null ? void 0 : refVar.current);\n  ref = refOpt || ref;\n  useEffect(function () {\n    if (onResize) onResizeRef.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    if (shouldUpdate) shouldUpdateRef.current = shouldUpdate;\n  }, [shouldUpdate]);\n  var observe = useCallback(function (element) {\n    if (element) ref.current = element;\n    if (observerRef.current && ref.current) observerRef.current.observe(ref.current);\n  }, [ref]);\n  var unobserve = useCallback(function () {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n  useEffect(function () {\n    if (!ref.current) return function () {\n      return null;\n    };\n\n    if ((!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) && !polyfill) {\n      console.error(observerErr);\n      return function () {\n        return null;\n      };\n    } // eslint-disable-next-line compat/compat\n\n\n    observerRef.current = new (polyfill || window.ResizeObserver)(function (_ref2) {\n      var entry = _ref2[0];\n      var contentBoxSize = entry.contentBoxSize,\n          borderBoxSize = entry.borderBoxSize,\n          contentRect = entry.contentRect;\n      var boxSize = contentBoxSize;\n      if (useBorderBoxSize) if (borderBoxSize) {\n        boxSize = borderBoxSize;\n      } else if (!warnedRef.current) {\n        console.warn(borderBoxWarn);\n        warnedRef.current = true;\n      } // @juggle/resize-observer polyfill has different data structure\n\n      boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n      var width = boxSize ? boxSize.inlineSize : contentRect.width;\n      var height = boxSize ? boxSize.blockSize : contentRect.height;\n      if (width === prevSizeRef.current.width && height === prevSizeRef.current.height) return;\n      prevSizeRef.current = {\n        width: width,\n        height: height\n      };\n      var e = {\n        currentBreakpoint: \"\",\n        width: width,\n        height: height,\n        entry: entry,\n        observe: observe,\n        unobserve: unobserve\n      };\n\n      if (breakpoints) {\n        e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n        if (e.currentBreakpoint !== prevBreakpointRef.current) {\n          if (onResizeRef.current) onResizeRef.current(e);\n          prevBreakpointRef.current = e.currentBreakpoint;\n        }\n      } else if (onResizeRef.current) {\n        onResizeRef.current(e);\n      }\n\n      var next = {\n        currentBreakpoint: e.currentBreakpoint,\n        width: width,\n        height: height,\n        entry: entry\n      };\n      if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n      if (!shouldUpdateRef.current && breakpoints && updateOnBreakpointChange) {\n        setState(function (prev) {\n          return prev.currentBreakpoint !== next.currentBreakpoint ? next : prev;\n        });\n        return;\n      }\n\n      setState(next);\n    });\n    observe();\n    return function () {\n      return unobserve();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(breakpoints), useBorderBoxSize, observe, unobserve, updateOnBreakpointChange]);\n  return _extends({\n    ref: ref\n  }, state, {\n    observe: observe,\n    unobserve: unobserve\n  });\n};\n\nexport default useDimensions;\nexport { borderBoxWarn, observerErr };","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/node_modules/react-cool-dimensions/dist/index.esm.js"],"names":["useState","useRef","useEffect","useCallback","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","observerErr","borderBoxWarn","getCurrentBreakpoint","bps","w","curBp","max","keys","forEach","val","useDimensions","_temp","_ref","refOpt","ref","useBorderBoxSize","breakpoints","updateOnBreakpointChange","shouldUpdate","onResize","polyfill","_useState","currentBreakpoint","width","height","state","setState","prevSizeRef","prevBreakpointRef","observerRef","onResizeRef","shouldUpdateRef","warnedRef","refVar","current","observe","element","unobserve","disconnect","window","console","error","ResizeObserver","_ref2","entry","contentBoxSize","borderBoxSize","contentRect","boxSize","warn","Array","isArray","inlineSize","blockSize","e","next","prev","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar observerErr = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nvar borderBoxWarn = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\nvar getCurrentBreakpoint = function getCurrentBreakpoint(bps, w) {\n  var curBp = \"\";\n  var max = -1;\n  Object.keys(bps).forEach(function (key) {\n    var val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n  return curBp;\n};\n\nvar useDimensions = function useDimensions(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      refOpt = _ref.ref,\n      useBorderBoxSize = _ref.useBorderBoxSize,\n      breakpoints = _ref.breakpoints,\n      updateOnBreakpointChange = _ref.updateOnBreakpointChange,\n      shouldUpdate = _ref.shouldUpdate,\n      onResize = _ref.onResize,\n      polyfill = _ref.polyfill;\n\n  var _useState = useState({\n    currentBreakpoint: \"\",\n    width: 0,\n    height: 0\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var prevSizeRef = useRef({});\n  var prevBreakpointRef = useRef();\n  var observerRef = useRef(null);\n  var onResizeRef = useRef(null);\n  var shouldUpdateRef = useRef(null);\n  var warnedRef = useRef(false);\n  var refVar = useRef(null);\n  var ref = useRef(refVar == null ? void 0 : refVar.current);\n  ref = refOpt || ref;\n  useEffect(function () {\n    if (onResize) onResizeRef.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    if (shouldUpdate) shouldUpdateRef.current = shouldUpdate;\n  }, [shouldUpdate]);\n  var observe = useCallback(function (element) {\n    if (element) ref.current = element;\n    if (observerRef.current && ref.current) observerRef.current.observe(ref.current);\n  }, [ref]);\n  var unobserve = useCallback(function () {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n  useEffect(function () {\n    if (!ref.current) return function () {\n      return null;\n    };\n\n    if ((!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) && !polyfill) {\n      console.error(observerErr);\n      return function () {\n        return null;\n      };\n    } // eslint-disable-next-line compat/compat\n\n\n    observerRef.current = new (polyfill || window.ResizeObserver)(function (_ref2) {\n      var entry = _ref2[0];\n      var contentBoxSize = entry.contentBoxSize,\n          borderBoxSize = entry.borderBoxSize,\n          contentRect = entry.contentRect;\n      var boxSize = contentBoxSize;\n      if (useBorderBoxSize) if (borderBoxSize) {\n        boxSize = borderBoxSize;\n      } else if (!warnedRef.current) {\n        console.warn(borderBoxWarn);\n        warnedRef.current = true;\n      } // @juggle/resize-observer polyfill has different data structure\n\n      boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n      var width = boxSize ? boxSize.inlineSize : contentRect.width;\n      var height = boxSize ? boxSize.blockSize : contentRect.height;\n      if (width === prevSizeRef.current.width && height === prevSizeRef.current.height) return;\n      prevSizeRef.current = {\n        width: width,\n        height: height\n      };\n      var e = {\n        currentBreakpoint: \"\",\n        width: width,\n        height: height,\n        entry: entry,\n        observe: observe,\n        unobserve: unobserve\n      };\n\n      if (breakpoints) {\n        e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n        if (e.currentBreakpoint !== prevBreakpointRef.current) {\n          if (onResizeRef.current) onResizeRef.current(e);\n          prevBreakpointRef.current = e.currentBreakpoint;\n        }\n      } else if (onResizeRef.current) {\n        onResizeRef.current(e);\n      }\n\n      var next = {\n        currentBreakpoint: e.currentBreakpoint,\n        width: width,\n        height: height,\n        entry: entry\n      };\n      if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n      if (!shouldUpdateRef.current && breakpoints && updateOnBreakpointChange) {\n        setState(function (prev) {\n          return prev.currentBreakpoint !== next.currentBreakpoint ? next : prev;\n        });\n        return;\n      }\n\n      setState(next);\n    });\n    observe();\n    return function () {\n      return unobserve();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(breakpoints), useBorderBoxSize, observe, unobserve, updateOnBreakpointChange]);\n  return _extends({\n    ref: ref\n  }, state, {\n    observe: observe,\n    unobserve: unobserve\n  });\n};\n\nexport default useDimensions;\nexport { borderBoxWarn, observerErr };\n"]},"metadata":{},"sourceType":"module"}