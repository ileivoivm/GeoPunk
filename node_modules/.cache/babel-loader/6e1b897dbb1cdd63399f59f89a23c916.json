{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js'; //-------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DEFAULT_SIZE = 500; //-------------------------------------------\n//-------------------------------------------\n\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75,\n  // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = '#4f83f1',\n  background = '#ccc'\n}) => {\n  _s();\n\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const {\n    hash\n  } = block; //-------------------------------------------\n\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height).parent(canvasParentRef);\n\n    canvasRef.current = p5;\n\n    attributesRef.current = () => {\n      return {\n        attributes: [{\n          display_type: 'number',\n          trait_type: 'your trait here number',\n          value: hoistedValue.current\n        }, {\n          trait_type: 'your trait here text',\n          value: 'replace me'\n        }]\n      };\n    };\n  };\n\n  const draw = p5 => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    p5.background(background); // reset shuffle bag\n\n    let seed = parseInt(hash.slice(0, 16), 16);\n    shuffleBag.current = new MersenneTwister(seed);\n    let objs = block.transactions.map(t => {\n      let seed = parseInt(t.hash.slice(0, 16), 16);\n      return {\n        y: shuffleBag.current.random(),\n        x: shuffleBag.current.random(),\n        radius: seed / 1000000000000000\n      };\n    }); //\n\n    hoistedValue.current = 42;\n    objs.map((dot, i) => {\n      p5.stroke(color1);\n      p5.strokeWeight(1 + mod2 * 10);\n      p5.ellipse(200 * dot.y * 6 * M, 100 * dot.x * 6 * M, dot.radius * M * mod1);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: handleResize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomStyle, \"eAcgvS7ZIhq58SkvxAYMJjr24hY=\");\n\n_c = CustomStyle;\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1: '#fff000',\n    background: '#000000'\n  }\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomStyle\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js"],"names":["React","useRef","Sketch","MersenneTwister","Mappa","DEFAULT_SIZE","CustomStyle","block","canvasRef","attributesRef","width","height","handleResize","mod1","mod2","color1","background","shuffleBag","hoistedValue","hash","setup","p5","canvasParentRef","_p5","createCanvas","parent","current","attributes","display_type","trait_type","value","draw","WIDTH","HEIGHT","DIM","Math","min","M","seed","parseInt","slice","objs","transactions","map","t","y","random","x","radius","dot","i","stroke","strokeWeight","ellipse","styleMetadata","name","description","image","creator_name","options","updateCProgress","CFrameCount","frameCount","frameCountPerCicle","CProgressR","CQuadEaseInR","CQuadEaseOutR","sq","CQuartEaseInR","pow","CQuartEaseOutR"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js';\n//-------------------------------------------\nlet DEFAULT_SIZE = 500;\n//-------------------------------------------\n//-------------------------------------------\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75, // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = '#4f83f1',\n  background = '#ccc',\n}) => {\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const { hash } = block;\n  //-------------------------------------------\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height).parent(canvasParentRef);\n    canvasRef.current = p5;\n\n    attributesRef.current = () => {\n      return {\n        attributes: [\n          {\n            display_type: 'number',\n            trait_type: 'your trait here number',\n            value: hoistedValue.current,\n          },\n          {\n            trait_type: 'your trait here text',\n            value: 'replace me',\n          },\n        ],\n      };\n    };\n  };\n\n  const draw = (p5) => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n\n    p5.background(background);\n\n    // reset shuffle bag\n    let seed = parseInt(hash.slice(0, 16), 16);\n    shuffleBag.current = new MersenneTwister(seed);\n    let objs = block.transactions.map((t) => {\n      let seed = parseInt(t.hash.slice(0, 16), 16);\n      return {\n        y: shuffleBag.current.random(),\n        x: shuffleBag.current.random(),\n        radius: seed / 1000000000000000,\n      };\n    });\n\n    //\n    hoistedValue.current = 42;\n\n    objs.map((dot, i) => {\n      p5.stroke(color1);\n      p5.strokeWeight(1 + mod2 * 10);\n      p5.ellipse(\n        200 * dot.y * 6 * M,\n        100 * dot.x * 6 * M,\n        dot.radius * M * mod1\n      );\n    });\n  };\n\n  return <Sketch setup={setup} draw={draw} windowResized={handleResize} />;\n};\n\nexport default CustomStyle;\n\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1: '#fff000',\n    background: '#000000',\n  },\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n"]},"metadata":{},"sourceType":"module"}