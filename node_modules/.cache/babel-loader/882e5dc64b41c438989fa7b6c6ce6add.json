{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ControlSlider from './ControlSlider';\nimport ControlColorPicker from './ControlColorPicker';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = function ({\n  mods,\n  blockNumber,\n  blocks,\n  attributes,\n  handleBlockChange\n}) {\n  _s();\n\n  const [isVisible, toggleVisibility] = useState(true);\n\n  const handleToggleVisibility = () => {\n    toggleVisibility(!isVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isVisible ? '' : 'hidden'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-button\",\n      onClick: handleToggleVisibility,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 484.4 479.2\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M382.4 479.2h102V0h-102v479.2zM338 239.6L206.1 126.3v64.9H0v97.9h206.1V353\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Change Block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-body\",\n      children: /*#__PURE__*/_jsxDEV(ControlSlider, {\n        modValue: blockNumber,\n        modValueMin: \"0\",\n        modValueMax: blocks.length - 1,\n        modValueStep: \"1\",\n        onChange: e => {\n          handleBlockChange(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Change Style\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-body\",\n      children: mods.map(({\n        key,\n        value,\n        set\n      }) => {\n        if (key.includes('color') || key.includes('background')) {\n          return /*#__PURE__*/_jsxDEV(ControlColorPicker, {\n            controlLabel: key,\n            modValue: value,\n            onChange: set\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(ControlSlider, {\n          controlLabel: key,\n          modValue: value,\n          onChange: set\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Custom Attributes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-body\",\n      children: attributes.attributes ? attributes.attributes.map((attribute, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-attribute\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-header\",\n            children: attribute.trait_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: attribute.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"MPUpEOraN92XtNpaD02W6CKYZ5o=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/components/Sidebar.js"],"names":["React","useState","ControlSlider","ControlColorPicker","Sidebar","mods","blockNumber","blocks","attributes","handleBlockChange","isVisible","toggleVisibility","handleToggleVisibility","length","e","map","key","value","set","includes","attribute","index","trait_type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ControlSlider from './ControlSlider';\nimport ControlColorPicker from './ControlColorPicker';\nimport './Sidebar.css';\n\nconst Sidebar = function ({\n  mods,\n  blockNumber,\n  blocks,\n  attributes,\n  handleBlockChange,\n}) {\n  const [isVisible, toggleVisibility] = useState(true);\n  const handleToggleVisibility = () => {\n    toggleVisibility(!isVisible);\n  };\n\n  return (\n    <div className={`sidebar ${isVisible ? '' : 'hidden'}`}>\n      <div className=\"toggle-button\" onClick={handleToggleVisibility}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 484.4 479.2\">\n          <path d=\"M382.4 479.2h102V0h-102v479.2zM338 239.6L206.1 126.3v64.9H0v97.9h206.1V353\" />\n        </svg>\n      </div>\n\n      <div className=\"section-header\">Change Block</div>\n      <div className=\"section-body\">\n        <ControlSlider\n          modValue={blockNumber}\n          modValueMin=\"0\"\n          modValueMax={blocks.length - 1}\n          modValueStep=\"1\"\n          onChange={(e) => {\n            handleBlockChange(e);\n          }}\n        />\n      </div>\n\n      <div className=\"section-header\">Change Style</div>\n      <div className=\"section-body\">\n        {mods.map(({ key, value, set }) => {\n          if (key.includes('color') || key.includes('background')) {\n            return (\n              <ControlColorPicker\n                key={key}\n                controlLabel={key}\n                modValue={value}\n                onChange={set}\n              />\n            );\n          }\n\n          return (\n            <ControlSlider\n              key={key}\n              controlLabel={key}\n              modValue={value}\n              onChange={set}\n            />\n          );\n        })}\n      </div>\n\n      <div className=\"section-header\">Custom Attributes</div>\n      <div className=\"section-body\">\n        {attributes.attributes\n          ? attributes.attributes.map((attribute, index) => {\n              return (\n                <div className=\"custom-attribute\" key={index}>\n                  <div className=\"content-header\">{attribute.trait_type}</div>\n                  <div>{attribute.value}</div>\n                </div>\n              );\n            })\n          : ''}\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}