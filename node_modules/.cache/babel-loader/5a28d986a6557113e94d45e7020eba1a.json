{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js'; //-------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DEFAULT_SIZE = 500; //-------------------------------------------\n\nlet frameCountPerCicle = 200;\nlet CFrameCount, CQuartEaseInR, CQuartEaseOutR;\nlet CProgressR, CQuadEaseInR, CQuadEaseOutR;\nlet back,\n    back2,\n    dis = 120,\n    mapId,\n    landId;\nlet inconsolata, mapDefult;\nlet displace, mosaic, sobel;\nlet land = [],\n    landImg = [];\nlet jsonFile, img, pg, img2, objs, radHash;\nlet checkDot = [2000],\n    checkCount = 0,\n    title,\n    subtitle;\nlet fontPosY, fontsize, readid, fontPosY2, fontsize2; //-------------------------------------------\n\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75,\n  // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)'\n}) => {\n  _s();\n\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const {\n    hash\n  } = block; //-------------------------------------------\n\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height, p5.WEBGL).parent(canvasParentRef);\n\n    canvasRef.current = p5; //-------------------------------------------loading\n\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel = p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0] = p5.loadModel('model/cone3.obj');\n    land[1] = p5.loadModel('model/cube3.obj');\n    land[2] = p5.loadModel('model/cross2.obj');\n    land[3] = p5.loadModel('model/quad.obj');\n    landImg[0] = p5.loadImage(\"model/cone3.png\");\n    landImg[1] = p5.loadImage(\"model/cube3.png\");\n    landImg[2] = p5.loadImage(\"model/cross3.png\");\n    landImg[3] = p5.loadImage(\"model/quad4.png\");\n    mapDefult = p5.loadImage(\"model/map.png\");\n    jsonFile = p5.loadJSON(\"GeoPunk.json\");\n    pg = p5.createGraphics(640, 640); //-------------------------------------------setting\n\n    p5.easycam = p5.createEasyCam({\n      distance: dis,\n      center: [0, 5, 0]\n    });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata); //-------------------------------------------\n\n    attributesRef.current = () => {\n      return {\n        attributes: [{\n          display_type: 'number',\n          trait_type: 'your trait here number',\n          value: hoistedValue.current\n        }, {\n          trait_type: 'your trait here text',\n          value: 'replace me'\n        }]\n      };\n    };\n  };\n\n  const draw = p5 => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5); //-------------------------------------------mainShape\n\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI / 180, width / height, 0.1, 5000);\n    back = p5.abs(p5.millis() % 6000 / 6000 - 0.5) - 0.5;\n    back2 = p5.millis() / 3000;\n    p5.rotateZ(back);\n    p5.rotateX(back);\n    p5.rotateY(back2); //------------------------------------------- reset shuffle bag\n\n    {\n      if (p5.frameCount < 30) {\n        p5.normalMaterial();\n        p5.sphere(50, 20, 20);\n      } else if (p5.frameCount == 30) {\n        //loading .png file\n        let seed = parseInt(hash.slice(0, 16), 16);\n        shuffleBag.current = new MersenneTwister(seed);\n        mapId = parseInt(shuffleBag.current.random() * 4);\n        landId = parseInt(shuffleBag.current.random() * 160);\n        console.log(jsonFile[landId]);\n        img = p5.loadImage(\"slitMap/\" + landId + \".png\");\n        img2 = p5.loadImage(\"sobel/p_\" + landId + \".png\");\n        hoistedValue.current = 42;\n        objs = block.transactions.map(t => {\n          let seed = parseInt(t.hash.slice(0, 16), 16);\n          let invert = shuffleBag.current.random(); // console.log(invert);\n\n          let dir = 1;\n          if (invert > 0.5) dir = 1;else dir = -1;\n          return {\n            name: t.hash,\n            z: (shuffleBag.current.random() * 2 + 1) * dir,\n            radius: seed / 500000000000000000\n          };\n        });\n      } else if (p5.frameCount > 30) {\n        pg.background(0);\n        if (img != null) pg.image(img, 0, 0, 640, 640);\n        pg.image(landImg[mapId], 0, 0, 640, 640);\n        p5.shader(displace);\n        displace.setUniform(\"colormap\", pg);\n        displace.setUniform(\"mapId\", mapId);\n        displace.setUniform(\"mod1\", mod1);\n        displace.setUniform(\"mod2\", 2.0 * (mod2 - 0.5));\n        displace.setUniform(\"color1\", [p5.red(color1) / 510, p5.green(color1) / 510, p5.blue(color1) / 510]);\n        {\n          // post-effect-invert\n          let checkInvert = p5.frameCount % 600;\n          let checkNum;\n          if (checkInvert < 100) checkNum = Math.random();\n          if (checkNum > 0.8) displace.setUniform(\"n\", 0);else displace.setUniform(\"n\", 1);\n          displace.setUniform(\"uFrameCount\", p5.frameCount);\n        }\n        p5.scale(12);\n        p5.stroke(255);\n        p5.strokeWeight(2);\n\n        for (let i = 0; i < 100; i++) {\n          let e = p5.lerp(3, -3, i / 100);\n          p5.point(0, e, 0);\n        }\n\n        p5.noStroke();\n        p5.fill(255);\n        p5.model(land[mapId]);\n        p5.resetShader(); //-------------------------------------------draw box\n\n        {\n          p5.push();\n          p5.noFill();\n          p5.stroke(100, 10);\n\n          if (mapId == 0) {\n            p5.translate(0, 0.5, 0);\n            p5.scale(0.8, 0.2, 0.8);\n          } else if (mapId == 1) {\n            p5.translate(0, 0.1, 0);\n            p5.scale(0.9, 0.25, 0.9);\n          } else if (mapId == 2) {\n            p5.scale(1, 0.2, 1);\n          } else if (mapId == 3) {\n            p5.translate(0, 0.4, 0);\n            p5.scale(1, 0.2, 1);\n          }\n\n          p5.box(8);\n          p5.pop();\n        } //-------------------------------------------draw transaction\n\n        {\n          p5.noFill();\n\n          for (let i = 0; i < objs.length; i++) {\n            p5.push();\n            p5.translate(0, objs[i].z, 0);\n            p5.rotateX(3.14 / 2);\n\n            if (i == radHash) {\n              p5.stroke(255, 0, 0, 150);\n              p5.strokeWeight(2.0);\n              p5.scale(2.0);\n            } else {\n              p5.stroke(250, 100);\n              p5.strokeWeight(0.5);\n              p5.scale(1.0);\n            }\n\n            p5.ellipse(0, 0, objs[i].radius, objs[i].radius, 20);\n            p5.pop();\n          }\n        } //-------------------------------------------otherLine\n\n        {\n          p5.resetShader();\n          p5.push();\n          p5.fill(255);\n          p5.translate(0, 3, 0);\n          p5.sphere(0.05, 20, 20);\n          p5.translate(0, -6, 0);\n          p5.sphere(0.05, 20, 20);\n          p5.pop(); //-------\n\n          p5.resetShader();\n          p5.push();\n          p5.fill(255);\n          p5.rotateY(p5.millis() / 2300);\n          p5.translate(2, -2, 0);\n          p5.shader(mosaic);\n          mosaic.setUniform(\"colormap\", img);\n          mosaic.setUniform(\"color1\", [p5.red(color1) / 510, p5.green(color1) / 510, p5.blue(color1) / 510]);\n          p5.stroke(255);\n          p5.strokeWeight(0.2);\n          p5.rect(0, 0, 1, 0.7);\n          p5.strokeWeight(2);\n\n          for (let i = 0; i < 20; i++) {\n            let e = p5.lerp(0.35, 1.6, i / 20);\n            p5.point(-0.6, e, 0);\n          }\n\n          for (let i = 0; i < 5; i++) {\n            let e = p5.lerp(-0.2, -0.6, i / 5);\n            p5.point(e, 0.35, 0);\n          } //-------\n\n\n          p5.resetShader();\n          p5.noFill();\n          p5.stroke(255);\n          p5.strokeWeight(2);\n          p5.rect(0, 0, 1, 0.70);\n          p5.strokeWeight(4);\n          p5.point(-0.6, 1.6, 0);\n          p5.point(-0.2, 0.35, 0);\n          p5.pop(); //-------\n\n          p5.push();\n          p5.fill(255);\n          p5.rotateY(p5.millis() / 1100);\n          p5.translate(2.5, -2.5, 0);\n          p5.stroke(255);\n          p5.strokeWeight(0.2);\n          p5.strokeWeight(2);\n\n          for (let i = 0; i < 20; i++) {\n            let e = p5.lerp(0.35, 2.2, i / 20);\n            p5.point(-0.6, e, 0);\n          }\n\n          for (let i = 0; i < 5; i++) {\n            let e = p5.lerp(-0.3, -0.6, i / 5);\n            p5.point(e, 0.35, 0);\n          } //-------\n\n\n          p5.strokeWeight(4);\n          p5.point(-0.6, 2.2, 0);\n          p5.point(-0.3, 0.35, 0);\n          p5.fill(255);\n          p5.text('LAT:' + jsonFile[landId].lat, -0.2, 0.2);\n          p5.text('LNG:' + jsonFile[landId].lng, -0.2, 0.4);\n          p5.pop();\n        } //-------------------------------------------drawHud\n\n        {\n          let cameraZoom = p5.easycam.getDistance();\n          let gridDist = p5.int(p5.map(cameraZoom, 60, 300, 15, 6)); //-------------------------------------------\n\n          p5.easycam.beginHUD();\n          p5.push();\n          {\n            p5.resetShader();\n            p5.blendMode(p5.SCREEN);\n            sobel.setUniform(\"resolution\", [640.0, 640.0]);\n            sobel.setUniform(\"colormap\", img2);\n            if (p5.frameCount % 10 == 0) sobel.setUniform(\"pos\", [Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0]); // sobel.setUniform(\"vol\",vol );\n\n            sobel.setUniform(\"time\", p5.float(p5.frameCount % 100000) / 1000.0);\n            p5.shader(sobel);\n            p5.fill(100, 100);\n            p5.rect(0, 0, width, height); // p5.image(img2,0,0,width,height);\n          }\n          p5.pop(); //-----------------\n\n          p5.resetShader();\n          {\n            p5.fill(100, 100); // text(place[radPlace].name,20,60);\n\n            p5.strokeWeight(1.0);\n\n            for (var i = 0; i < width; i += gridDist * 10) {\n              p5.stroke(80, 50);\n              p5.line(i, 0, i, height);\n              p5.line(width, i, 0, i);\n            }\n\n            checkCount = 0;\n\n            if (p5.frameCount % 30 === 0) {\n              for (let i = 0; i < width; i += gridDist * 10) {\n                for (let j = 0; j < height; j += gridDist * 10) {\n                  let k = p5.random(10);\n                  if (k > 5) checkDot[checkCount] = false;else checkDot[checkCount] = true;\n                  if (checkDot[checkCount]) p5.point(i, j);\n                  checkCount++;\n                }\n              }\n            }\n\n            checkCount = 0;\n            p5.strokeWeight(3.0);\n            p5.stroke(150, 100);\n\n            for (let i = 0; i < width; i += gridDist * 10) {\n              for (let j = 0; j < height; j += gridDist * 10) {\n                if (checkDot[checkCount]) p5.point(i, j);\n                checkCount++;\n              }\n            }\n          } //-----------------\n\n          if (p5.frameCount % 20 === 0) {\n            fontPosY = p5.random(-100, 100) + height / 2;\n            fontsize = p5.random(20, 40);\n            readid = p5.int(p5.random(4));\n            if (readid == 0) title = jsonFile[landId].longnameA;else if (readid == 1) title = jsonFile[landId].longnameB;else if (readid == 2) title = jsonFile[landId].longnameC;else title = jsonFile[landId].longnameD;\n          }\n\n          if (p5.frameCount % 5 === 0) {\n            fontPosY2 = p5.random(-100, 100) + height / 2;\n            fontsize2 = p5.random(10, 20);\n          }\n\n          p5.blendMode(p5.BLEND);\n          p5.fill(250, p5.random(150, 200));\n          p5.textSize(fontsize);\n          if (title != null) p5.text(title, 10, fontPosY); //\n\n          p5.textSize(fontsize2);\n          p5.fill(200, 60);\n          p5.text(jsonFile[landId].formatted_address, 10, fontPosY2); //   //-----------------\n\n          p5.textAlign(p5.CENTER, p5.CENTER);\n          p5.textSize(14);\n          p5.fill(150, 60); //\n\n          if (objs == null) p5.text(hash, width / 2, height - height * 0.05);else {\n            if (p5.frameCount % 30 == 0) radHash = p5.int(p5.random(objs.length));\n\n            if (objs[radHash] != null) {\n              // console.log(objs[radHash]);\n              p5.text(objs[radHash].name, width / 2, height - height * 0.05);\n            }\n          } //\n          // drawFrame(p5,width,height);\n\n          p5.easycam.endHUD();\n        } //-------------------------------------------\n      }\n    } //-------------------------------------------\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: handleResize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomStyle, \"eAcgvS7ZIhq58SkvxAYMJjr24hY=\");\n\n_c = CustomStyle;\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1: \"hsl(\" + parseInt(Math.random() * 360) + \",90%,10%)\",\n    background: \"hsl(\" + parseInt(Math.random() * 360) + \",80%,10%)\"\n  }\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomStyle\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js"],"names":["React","useRef","Sketch","MersenneTwister","Mappa","DEFAULT_SIZE","frameCountPerCicle","CFrameCount","CQuartEaseInR","CQuartEaseOutR","CProgressR","CQuadEaseInR","CQuadEaseOutR","back","back2","dis","mapId","landId","inconsolata","mapDefult","displace","mosaic","sobel","land","landImg","jsonFile","img","pg","img2","objs","radHash","checkDot","checkCount","title","subtitle","fontPosY","fontsize","readid","fontPosY2","fontsize2","CustomStyle","block","canvasRef","attributesRef","width","height","handleResize","mod1","mod2","color1","background","shuffleBag","hoistedValue","hash","setup","p5","canvasParentRef","_p5","createCanvas","WEBGL","parent","current","loadFont","loadShader","loadModel","loadImage","loadJSON","createGraphics","easycam","createEasyCam","distance","center","setDistanceMin","setDistanceMax","textSize","textAlign","LEFT","CENTER","textFont","attributes","display_type","trait_type","value","draw","WIDTH","HEIGHT","DIM","Math","min","M","updateCProgress","blendMode","BLEND","noStroke","perspective","PI","abs","millis","rotateZ","rotateX","rotateY","frameCount","normalMaterial","sphere","seed","parseInt","slice","random","console","log","transactions","map","t","invert","dir","name","z","radius","image","shader","setUniform","red","green","blue","checkInvert","checkNum","scale","stroke","strokeWeight","i","e","lerp","point","fill","model","resetShader","push","noFill","translate","box","pop","length","ellipse","rect","text","lat","lng","cameraZoom","getDistance","gridDist","int","beginHUD","SCREEN","float","line","j","k","longnameA","longnameB","longnameC","longnameD","formatted_address","endHUD","styleMetadata","description","creator_name","options","sq","pow"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js';\n//-------------------------------------------\nlet DEFAULT_SIZE = 500;\n//-------------------------------------------\nlet frameCountPerCicle = 200;\nlet CFrameCount,CQuartEaseInR,CQuartEaseOutR;\nlet CProgressR,CQuadEaseInR,CQuadEaseOutR;\nlet back,back2,dis=120,mapId,landId;\nlet inconsolata,mapDefult;\nlet displace,mosaic,sobel;\nlet land=[],landImg=[];\nlet jsonFile,img,pg,img2,objs,radHash;\nlet checkDot=[2000],checkCount=0,title,subtitle;\nlet fontPosY,fontsize,readid,fontPosY2,fontsize2;\n//-------------------------------------------\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75, // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)',\n}) => {\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const { hash } = block;\n  //-------------------------------------------\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    canvasRef.current = p5;\n    //-------------------------------------------loading\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel=p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0]=p5.loadModel('model/cone3.obj');\n    land[1]=p5.loadModel('model/cube3.obj');\n    land[2]=p5.loadModel('model/cross2.obj');\n    land[3]=p5.loadModel('model/quad.obj');\n    landImg[0]=p5.loadImage(\"model/cone3.png\");\n    landImg[1]=p5.loadImage(\"model/cube3.png\");\n    landImg[2]=p5.loadImage(\"model/cross3.png\");\n    landImg[3]=p5.loadImage(\"model/quad4.png\");\n    mapDefult=p5.loadImage(\"model/map.png\");\n    jsonFile=p5.loadJSON(\"GeoPunk.json\");\n    pg = p5.createGraphics(640, 640);\n    //-------------------------------------------setting\n    p5.easycam = p5.createEasyCam({distance:dis,center: [0,5,0] });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata);\n    //-------------------------------------------\n    attributesRef.current = () => {\n      return {\n        attributes: [\n          {\n            display_type: 'number',\n            trait_type: 'your trait here number',\n            value: hoistedValue.current,\n          },\n          {\n            trait_type: 'your trait here text',\n            value: 'replace me',\n          },\n        ],\n      };\n    };\n  };\n\n  const draw = (p5) => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    //-------------------------------------------mainShape\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI/180, width/height, 0.1, 5000);\n    back=p5.abs(((p5.millis()%6000) / 6000)-0.5)-0.5;\n    back2=p5.millis() / 3000;\n    p5.rotateZ(back);\n    p5.rotateX(back);\n    p5.rotateY(back2);\n    //------------------------------------------- reset shuffle bag\n    {\n      if(p5.frameCount<30){\n        p5.normalMaterial();\n        p5.sphere(50,20,20);\n      } else if(p5.frameCount==30){//loading .png file\n        let seed = parseInt(hash.slice(0, 16), 16);\n        shuffleBag.current = new MersenneTwister(seed);\n        mapId   = parseInt(shuffleBag.current.random()*4);\n        landId  = parseInt(shuffleBag.current.random()*160);\n        console.log(jsonFile[landId]);\n        img =p5.loadImage(\"slitMap/\"+landId+\".png\");\n        img2=p5.loadImage(\"sobel/p_\"+landId+\".png\");\n        hoistedValue.current = 42;\n        objs = block.transactions.map((t) => {\n          let seed = parseInt(t.hash.slice(0, 16), 16);\n          let invert=shuffleBag.current.random();\n          // console.log(invert);\n          let dir=1;\n          if(invert>0.5)dir=1;\n          else dir=-1;\n          return {\n            name:t.hash,\n            z: (shuffleBag.current.random()*2+1)*dir,\n            radius: seed / 500000000000000000,\n          };\n        });\n      }else if(p5.frameCount>30){\n        pg.background(0);\n        if(img != null)pg.image(img,0,0,640,640);\n        pg.image(landImg[mapId],0,0,640,640);\n        p5.shader(displace);\n        displace.setUniform(\"colormap\", pg);\n        displace.setUniform(\"mapId\", mapId);\n        displace.setUniform(\"mod1\", mod1);\n        displace.setUniform(\"mod2\", 2.0*(mod2-0.5));\n        displace.setUniform(\"color1\", [p5.red(color1)/510,p5.green(color1)/510,p5.blue(color1)/510]);\n        { // post-effect-invert\n          let checkInvert=(p5.frameCount%600);\n          let checkNum;\n          if(checkInvert<100)checkNum=Math.random();\n          if(checkNum>0.8)displace.setUniform(\"n\", 0);\n          else displace.setUniform(\"n\", 1);\n          displace.setUniform(\"uFrameCount\", p5.frameCount);\n        }\n        p5.scale(12);\n        p5.stroke(255);\n        p5.strokeWeight(2);\n        for(let i=0;i<100;i++){\n          let e = p5.lerp(3, -3, i/100);\n          p5.point(0,e,0);\n        }\n        p5.noStroke();\n        p5.fill(255);\n        p5.model(land[mapId]);\n        p5.resetShader();\n        //-------------------------------------------draw box\n        {\n          p5.push();\n          p5.noFill();\n          p5.stroke(100,10);\n          if(mapId==0){\n            p5.translate(0,0.5,0);\n            p5.scale(0.8,0.2,0.8);\n          }\n          else if(mapId==1){\n            p5.translate(0,0.1,0);\n            p5.scale(0.9,0.25,0.9);\n          }\n          else if(mapId==2){\n            p5.scale(1,0.2,1);\n          }\n          else if(mapId==3){\n            p5.translate(0,0.4,0);\n            p5.scale(1,0.2,1);\n          }\n          p5.box(8);\n          p5.pop();\n        }\n        //-------------------------------------------draw transaction\n        {\n          p5.noFill();\n          for(let i=0;i<objs.length;i++){\n            p5.push();\n            p5.translate(0,objs[i].z,0);\n            p5.rotateX(3.14/2);\n            if(i==radHash){\n              p5.stroke(255,0,0,150);\n              p5.strokeWeight(2.0);\n              p5.scale(2.0);\n            }else{\n              p5.stroke(250,100);\n              p5.strokeWeight(0.5);\n              p5.scale(1.0);\n            }\n            p5.ellipse(0,0,objs[i].radius,objs[i].radius,20);\n            p5.pop();\n          }\n        }\n        //-------------------------------------------otherLine\n        {\n          p5.resetShader();\n          p5.push();\n          p5.fill(255);\n          p5.translate(0,3,0);\n          p5.sphere(0.05,20,20);\n          p5.translate(0,-6,0);\n          p5.sphere(0.05,20,20);\n          p5.pop();\n          //-------\n          p5.resetShader();\n          p5.push();\n          p5.fill(255);\n          p5.rotateY(p5.millis() / 2300);\n          p5.translate(2,-2,0);\n          p5.shader(mosaic);\n          mosaic.setUniform(\"colormap\", img);\n          mosaic.setUniform(\"color1\", [p5.red(color1)/510,p5.green(color1)/510,p5.blue(color1)/510]);\n          p5.stroke(255);\n          p5.strokeWeight(0.2);\n          p5.rect(0,0,1,0.7);\n          p5.strokeWeight(2);\n          for(let i=0;i<20;i++){\n            let e = p5.lerp(0.35, 1.6, i/20);\n            p5.point(-0.6,e,0);\n          }\n          for(let i=0;i<5;i++){\n            let e = p5.lerp(-0.2, -0.6, i/5);\n            p5.point(e,0.35,0);\n          }\n          //-------\n          p5.resetShader();\n          p5.noFill();\n          p5.stroke(255);\n          p5.strokeWeight(2);\n          p5.rect(0,0,1,0.70);\n          p5.strokeWeight(4);\n          p5.point(-0.6,1.6,0);\n          p5.point(-0.2,0.35,0);\n          p5.pop();\n          //-------\n          p5.push();\n          p5.fill(255);\n          p5.rotateY(p5.millis() / 1100);\n          p5.translate(2.5,-2.5,0);\n          p5.stroke(255);\n          p5.strokeWeight(0.2);\n          p5.strokeWeight(2);\n          for(let i=0;i<20;i++){\n            let e = p5.lerp(0.35, 2.2, i/20);\n            p5.point(-0.6,e,0);\n          }\n          for(let i=0;i<5;i++){\n            let e = p5.lerp(-0.3, -0.6, i/5);\n            p5.point(e,0.35,0);\n          }\n          //-------\n          p5.strokeWeight(4);\n          p5.point(-0.6,2.2,0);\n          p5.point(-0.3,0.35,0);\n          p5.fill(255);\n          p5.text('LAT:'+jsonFile[landId].lat, -0.2, 0.2);\n          p5.text('LNG:'+jsonFile[landId].lng, -0.2, 0.4);\n          p5.pop();\n        }\n        //-------------------------------------------drawHud\n        {\n          let cameraZoom=p5.easycam.getDistance();\n          let gridDist=p5.int(p5.map(cameraZoom,60,300,15,6));\n          //-------------------------------------------\n          p5.easycam.beginHUD();\n          p5.push();\n          {\n            p5.resetShader();\n            p5.blendMode(p5.SCREEN);\n            sobel.setUniform(\"resolution\", [640.0,640.0]);\n            sobel.setUniform(\"colormap\", img2);\n            if(p5.frameCount%10==0)sobel.setUniform(\"pos\", [Math.random()*2.0-1.0,Math.random()*2.0-1.0]);\n            // sobel.setUniform(\"vol\",vol );\n            sobel.setUniform(\"time\", p5.float(p5.frameCount%100000)/1000.0);\n            p5.shader(sobel);\n            p5.fill(100,100);\n            p5.rect(0,0,width,height);\n            // p5.image(img2,0,0,width,height);\n\n          }\n          p5.pop();\n          //-----------------\n          p5.resetShader();\n          {\n            p5.fill(100,100)\n            // text(place[radPlace].name,20,60);\n            p5.strokeWeight(1.0);\n            for (var i = 0; i < width; i += gridDist*10) {\n              p5.stroke(80,50);\n              p5.line(i, 0, i, height);\n              p5.line(width, i, 0, i);\n            }\n            checkCount=0;\n            if(p5.frameCount%30===0){\n              for (let i = 0; i < width; i += gridDist*10) {\n                for (let j = 0; j < height; j += gridDist*10) {\n                  let k=p5.random(10);\n                  if(k>5)checkDot[checkCount]=false;\n                  else checkDot[checkCount]=true;\n                  if(checkDot[checkCount])p5.point(i,j);\n                  checkCount++;\n                }\n              }\n            }\n            checkCount=0;\n            p5.strokeWeight(3.0);\n            p5.stroke(150,100)\n            for (let i = 0; i < width; i += gridDist*10) {\n              for (let j = 0; j < height; j += gridDist*10) {\n                if(checkDot[checkCount])p5.point(i,j);\n                checkCount++;\n              }\n            }\n          }\n          //-----------------\n            if (p5.frameCount%20===0) {\n              fontPosY=p5.random(-100,100)+height/2;\n              fontsize=p5.random(20, 40);\n              readid=p5.int(p5.random(4));\n              if(readid==0)title=jsonFile[landId].longnameA;\n              else if(readid==1)title=jsonFile[landId].longnameB;\n              else if(readid==2)title=jsonFile[landId].longnameC;\n              else title=jsonFile[landId].longnameD;\n            }\n\n            if (p5.frameCount%5===0) {\n              fontPosY2=p5.random(-100,100)+height/2;\n              fontsize2=p5.random(10, 20);\n            }\n            p5.blendMode(p5.BLEND);\n            p5.fill(250,p5.random(150,200));\n            p5.textSize(fontsize);\n\n            if(title!=null)p5.text(title, 10, fontPosY);\n          //\n            p5.textSize(fontsize2);\n            p5.fill(200,60);\n            p5.text(jsonFile[landId].formatted_address, 10, fontPosY2);\n          //   //-----------------\n            p5.textAlign(p5.CENTER,p5.CENTER);\n            p5.textSize(14);\n            p5.fill(150,60);\n          //\n\n\n          if(objs==null)p5.text(hash, width/2,height-height*0.05);\n          else {\n            if(p5.frameCount%30==0)radHash=p5.int(p5.random(objs.length));\n            if(objs[radHash]!=null){\n              // console.log(objs[radHash]);\n              p5.text(objs[radHash].name, width/2,height-height*0.05);\n            }\n          }\n\n\n          //\n          // drawFrame(p5,width,height);\n          p5.easycam.endHUD();\n        }\n        //-------------------------------------------\n      }\n    }\n    //-------------------------------------------\n  };\n\n  return <Sketch setup={setup} draw={draw} windowResized={handleResize} />;\n};\n\nexport default CustomStyle;\n\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1 : \"hsl(\"+parseInt(Math.random()*360)+\",90%,10%)\",\n    background :\"hsl(\"+parseInt(Math.random()*360)+\",80%,10%)\"\n  },\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n"]},"metadata":{},"sourceType":"module"}