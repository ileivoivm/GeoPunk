{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js'; //-------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key2 = 'AIzaSyB68yPc_unBU9fvPHyhfBqckW0EI38vqR4';\nconst mappa = new Mappa('Google', key2);\nlet jsonAddress, jsonData;\nlet img, img2, back, back2;\nlet rx = 160,\n    ry = 160,\n    slitCount = 0,\n    mapId = 2,\n    myMap;\nlet pg, displace, mosaic, source, mapDefult, jsonDefult;\nlet radlng, radlat, radPlace, inconsolata, sobel, pg2;\nlet rr = 0,\n    gg = 0,\n    bb = 0;\nlet t0 = {\n  'name': 'United States',\n  'lat': 38.933,\n  'lng': -109.699\n};\nlet t1 = {\n  'name': 'Taiwan',\n  'lat': 23.95,\n  'lng': 120.68\n};\nlet t2 = {\n  'name': 'Canada',\n  'lat': 52.61,\n  'lng': -72.074\n};\nlet t3 = {\n  'name': 'Australia',\n  'lat': -35.30,\n  'lng': 149.12\n};\nlet t4 = {\n  'name': 'Newtown',\n  'lat': -41.30,\n  'lng': 174.78\n};\nlet t5 = {\n  'name': 'United Kingdom',\n  'lat': 51.50,\n  'lng': -0.12\n};\nlet t6 = {\n  'name': 'China',\n  'lat': 39.91,\n  'lng': 116.39\n};\nlet t7 = {\n  'name': 'Russia',\n  'lat': 62.90,\n  'lng': 147.70\n};\nlet place = [t0, t1, t2, t3, t4, t5, t6, t7];\nlet land = [],\n    landImg = [];\nvar messages,\n    messages2,\n    messages3,\n    readid = 0;\nlet formatted_address,\n    checkJson = false;\nlet fontsize = 20,\n    fontPosY = 50;\nlet fontsize2 = 20,\n    fontPosY2 = 50;\nvar obj = [],\n    objs;\nlet checkDot = [2000];\nlet checkCount = 0,\n    runAngle = 0,\n    dis = 120,\n    radHash = 0; //-------------------------------------------\n\nvar frameCountPerCicle = 200;\nvar CFrameCount;\nvar CProgressR, CQuadEaseInR, CQuadEaseOutR, CQuartEaseInR, CQuartEaseOutR; //-------------------------------------------\n\nlet DEFAULT_SIZE = 500;\n\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.15,\n  // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'rgb(255,255,255)',\n  background = 'rgb(30,30,30)'\n}) => {\n  _s();\n\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const {\n    hash\n  } = block; //-------------------------------------------\n\n  const preload = p5 => {\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel = p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0] = p5.loadModel('model/cone3.obj');\n    land[1] = p5.loadModel('model/cube3.obj');\n    land[2] = p5.loadModel('model/cross3.obj');\n    land[3] = p5.loadModel('model/quad.obj');\n    landImg[0] = p5.loadImage(\"model/cone3.png\");\n    landImg[1] = p5.loadImage(\"model/cube3.png\");\n    landImg[2] = p5.loadImage(\"model/cross3.png\");\n    landImg[3] = p5.loadImage(\"model/quad4.png\");\n    mapDefult = p5.loadImage(\"model/map.png\");\n    jsonDefult = p5.loadJSON(\"data.json\"); //---------------------------\n\n    let seed = parseInt(hash.slice(0, 16), 16);\n    console.log(hash); // console.log(seed);\n\n    shuffleBag.current = new MersenneTwister(seed); // console.log(objs);\n\n    let newRad = p5.int(p5.random(1, 30));\n\n    for (let i = 0; i < newRad; i++) {\n      let temp = shuffleBag.current.random();\n    }\n\n    radPlace = parseInt(shuffleBag.current.random() * 6);\n    radlat = p5.nf(place[radPlace].lat + shuffleBag.current.random() * 0.08 - 0.04, 2, 3);\n    radlng = p5.nf(place[radPlace].lng + shuffleBag.current.random() * 0.08 - 0.04, 2, 3); // mapId   = 3;\n\n    mapId = parseInt(shuffleBag.current.random() * 4);\n    dis = parseInt(shuffleBag.current.random() * 240) + 60;\n    objs = block.transactions.map(t => {\n      let seed = parseInt(t.hash.slice(0, 16), 16);\n      let invert = shuffleBag.current.random(); // console.log(invert);\n\n      let dir = 1;\n      if (invert > 0.5) dir = 1;else dir = -1;\n      return {\n        name: t.hash,\n        z: (shuffleBag.current.random() * 2 + 1) * dir,\n        radius: seed / 500000000000000000\n      };\n    }); //---------------------------\n\n    const options = {\n      lat: radlat,\n      lng: radlng,\n      zoom: 16,\n      width: 640,\n      height: 640,\n      scale: 1,\n      format: 'PNG',\n      language: 'en',\n      maptype: 'satellite'\n    };\n    console.log(place[radPlace], options.lat, options.lng); //---------------------------\n\n    jsonAddress = \"https://maps.googleapis.com/maps/api/geocode/json?language=en&latlng=\" + options.lat + \",\" + options.lng + \"&key=\" + key2;\n    jsonData = p5.loadJSON(jsonAddress);\n    jsonDefult = p5.loadJSON(\"data.json\"); //---------------------------\n    // img = p5.loadImage(myMap.imgUrl);\n    // console.log(myMap.imgUrl);\n    //---------------------------\n\n    myMap = mappa.staticMap(options);\n\n    function responseImg() {\n      img = p5.loadImage(myMap.imgUrl);\n    }\n\n    function noresponseImg() {\n      img = mapDefult;\n    } //---------------------------\n\n\n    function getRequestImg(url) {\n      p5.httpDo(url, \"GET\", false, responseImg, noresponseImg);\n    }\n\n    getRequestImg(myMap.imgUrl); //---------------------------\n    //-------------------------------------------\n  }; //-------------------------------------------\n\n\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    p5.createCanvas(width, height, p5.WEBGL).parent(canvasParentRef);\n    p5.pixelDensity(2);\n    canvasRef.current = p5; //-------------------------------------------\n\n    source = p5.createGraphics(640, 640);\n    pg = p5.createGraphics(640, 640);\n    img2 = p5.createGraphics(640, 640); //-------------------------------------------\n\n    img2.background(0);\n    img2.image(img, 0, 0, 660, 660);\n    p5.easycam = p5.createEasyCam({\n      distance: dis,\n      center: [0, 5, 0]\n    });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.noStroke();\n    p5.textureWrap(p5.CLAMP);\n    source.image(img, 0, 0);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata); //-------------------------------------------\n    //-------------------------------------------\n\n    attributesRef.current = () => {\n      return {\n        // This is called when the final image is generated, when creator opens the Mint NFT modal.\n        // should return an object structured following opensea/enjin metadata spec for attributes/properties\n        // https://docs.opensea.io/docs/metadata-standards\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md#erc-1155-metadata-uri-json-schema\n        attributes: [{\n          display_type: 'number',\n          trait_type: 'your trait here number',\n          value: hoistedValue.current // using the hoisted value from within the draw() method, stored in the ref.\n\n        }, {\n          trait_type: 'your trait here text',\n          value: 'replace me'\n        }]\n      };\n    };\n  };\n\n  const draw = p5 => {\n    // let WIDTH = width;\n    // let HEIGHT = height;\n    // let DIM = Math.min(WIDTH, HEIGHT);\n    // let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    rr = p5.red(color1) / 510;\n    gg = p5.green(color1) / 510;\n    bb = p5.blue(color1) / 510; //-------------------------------------------mainShape\n\n    {\n      p5.background(background);\n      p5.blendMode(p5.BLEND);\n      p5.noStroke();\n      p5.textSize(0.10);\n      p5.perspective(60 * p5.PI / 180, width / height, 0.1, 5000); // p5.normalMaterial();\n\n      back = p5.abs(p5.millis() % 6000 / 6000 - 0.5) - 0.5;\n      back2 = p5.millis() / 3000;\n      p5.rotateZ(back);\n      p5.rotateX(back);\n      p5.rotateY(back2);\n      p5.shader(displace);\n      displace.setUniform(\"colormap\", pg);\n      displace.setUniform(\"mapId\", mapId);\n      displace.setUniform(\"mod1\", mod1);\n      displace.setUniform(\"mod2\", mod2);\n      displace.setUniform(\"color1\", [rr, gg, bb]); // console.log([rr,gg,bb]);\n\n      let checkInvert = p5.frameCount % 600; // console.log(p5.frameCount);\n\n      let checkNum;\n      if (checkInvert < 100) checkNum = Math.random(); // console.log(checkNum);\n\n      if (checkNum > 0.8) displace.setUniform(\"n\", 0);else displace.setUniform(\"n\", 1);\n      displace.setUniform(\"uFrameCount\", p5.frameCount);\n      p5.scale(12);\n      p5.stroke(255);\n      p5.strokeWeight(2);\n\n      for (let i = 0; i < 100; i++) {\n        let e = p5.lerp(3, -3, i / 100);\n        p5.point(0, e, 0);\n      }\n\n      p5.noStroke();\n      p5.fill(255);\n      p5.model(land[mapId]);\n      p5.resetShader(); //-----------------------------draw box\n\n      p5.push();\n      {\n        p5.noFill();\n        p5.stroke(100, 10);\n\n        if (mapId == 0) {\n          p5.translate(0, 0.5, 0);\n          p5.scale(0.8, 0.2, 0.8);\n        } else if (mapId == 1) {\n          p5.translate(0, 0.1, 0);\n          p5.scale(0.9, 0.25, 0.9);\n        } else if (mapId == 2) {\n          p5.scale(1, 0.2, 1);\n        } else if (mapId == 3) {\n          p5.translate(0, 0.4, 0);\n          p5.scale(1, 0.2, 1);\n        }\n\n        p5.box(8);\n      }\n      p5.pop(); //-----------------------------draw transaction\n\n      p5.noFill();\n\n      for (let i = 0; i < objs.length; i++) {\n        p5.push();\n        p5.translate(0, objs[i].z, 0);\n        p5.rotateX(3.14 / 2);\n\n        if (i == radHash) {\n          p5.stroke(255, 0, 0, 150);\n          p5.strokeWeight(2.0);\n        } else {\n          p5.stroke(200, 100);\n          p5.strokeWeight(0.5);\n        }\n\n        p5.ellipse(0, 0, objs[i].radius, objs[i].radius, 20);\n        p5.pop();\n      } //-----------------------------\n\n    } //-------------------------------------------otherLine\n\n    {\n      p5.resetShader();\n      p5.push();\n      p5.fill(255);\n      p5.translate(0, 3, 0);\n      p5.sphere(0.05, 20, 20);\n      p5.translate(0, -6, 0);\n      p5.sphere(0.05, 20, 20);\n      p5.pop();\n      p5.resetShader();\n      p5.push();\n      p5.fill(255);\n      p5.rotateY(p5.millis() / 2300);\n      p5.translate(2, -2, 0);\n      p5.shader(mosaic);\n      mosaic.setUniform(\"colormap\", img);\n      mosaic.setUniform(\"color1\", [rr, gg, bb]);\n      p5.stroke(255);\n      p5.strokeWeight(0.2);\n      p5.rect(0, 0, 1, 0.7);\n      p5.strokeWeight(2);\n\n      for (let i = 0; i < 20; i++) {\n        let e = p5.lerp(0.35, 1.6, i / 20);\n        p5.point(-0.6, e, 0);\n      }\n\n      for (let i = 0; i < 5; i++) {\n        let e = p5.lerp(-0.2, -0.6, i / 5);\n        p5.point(e, 0.35, 0);\n      }\n\n      p5.resetShader();\n      p5.noFill();\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      p5.rect(0, 0, 1, 0.70);\n      p5.strokeWeight(4);\n      p5.point(-0.6, 1.6, 0);\n      p5.point(-0.2, 0.35, 0);\n      p5.pop();\n      p5.push();\n      p5.fill(255);\n      p5.rotateY(p5.millis() / 1100);\n      p5.translate(2.5, -2.5, 0);\n      p5.stroke(255);\n      p5.strokeWeight(0.2);\n      p5.strokeWeight(2);\n\n      for (let i = 0; i < 20; i++) {\n        let e = p5.lerp(0.35, 2.2, i / 20);\n        p5.point(-0.6, e, 0);\n      }\n\n      for (let i = 0; i < 5; i++) {\n        let e = p5.lerp(-0.3, -0.6, i / 5);\n        p5.point(e, 0.35, 0);\n      }\n\n      p5.strokeWeight(4);\n      p5.point(-0.6, 2.2, 0);\n      p5.point(-0.3, 0.35, 0);\n      p5.fill(255);\n      p5.text('LAT:' + radlat, -0.2, 0.2);\n      p5.text('LNG:' + radlng, -0.2, 0.4);\n      p5.pop();\n    } //-------------------------------------------drawHud\n\n    {\n      let cameraZoom = p5.easycam.getDistance();\n      let gridDist = p5.int(p5.map(cameraZoom, 60, 300, 15, 6)); // console.log(cameraZoom);\n      //-------------------------------------------\n      // p5.push();\n      // {\n      //   // p5.resetShader();\n      //   // let ro=p5.easycam.getRotation();\n      //   // // console.log(ro);\n      //   // // ro[0]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[1]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[2]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[4]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // p5.rotate(ro);\n      //   // p5.shader(sobel);\n      //   // sobel.setUniform(\"resolution\", [640.0,640.0]);\n      //   // sobel.setUniform(\"colormap\", img);\n      //   p5.fill(255);\n      //   p5.rect(0,0,1,1);\n      //   // p5.box(3);\n      // }\n      // p5.pop();\n      //-------------------------------------------\n\n      p5.easycam.beginHUD();\n      p5.push();\n      {\n        p5.resetShader();\n        p5.blendMode(p5.SCREEN);\n        sobel.setUniform(\"resolution\", [640.0, 640.0]);\n        sobel.setUniform(\"colormap\", img2);\n        if (p5.frameCount % 10 == 0) sobel.setUniform(\"pos\", [Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0]); // sobel.setUniform(\"vol\",vol );\n\n        sobel.setUniform(\"time\", p5.float(p5.frameCount % 100000) / 1000.0);\n        p5.shader(sobel);\n        p5.fill(100, 100);\n        p5.rect(0, 0, width, height);\n      }\n      p5.pop(); //-----------------\n\n      p5.resetShader();\n      {\n        p5.fill(100, 100); // text(place[radPlace].name,20,60);\n\n        p5.strokeWeight(1.0);\n\n        for (var i = 0; i < width; i += gridDist * 10) {\n          p5.stroke(80, 50);\n          p5.line(i, 0, i, height);\n          p5.line(width, i, 0, i);\n        }\n\n        checkCount = 0;\n\n        if (p5.frameCount % 30 === 0) {\n          for (let i = 0; i < width; i += gridDist * 10) {\n            for (let j = 0; j < height; j += gridDist * 10) {\n              let k = p5.random(10);\n              if (k > 5) checkDot[checkCount] = false;else checkDot[checkCount] = true;\n              if (checkDot[checkCount]) p5.point(i, j);\n              checkCount++;\n            }\n          }\n        }\n\n        checkCount = 0;\n        p5.strokeWeight(3.0);\n        p5.stroke(150, 100);\n\n        for (let i = 0; i < width; i += gridDist * 10) {\n          for (let j = 0; j < height; j += gridDist * 10) {\n            if (checkDot[checkCount]) p5.point(i, j);\n            checkCount++;\n          }\n        }\n      } //-----------------\n\n      if (messages2 != null) {\n        if (p5.frameCount % 20 === 0) {\n          fontPosY = p5.random(-100, 100) + height / 2;\n          fontsize = p5.random(20, 40);\n          readid = p5.int(p5.random(3));\n        }\n\n        if (p5.frameCount % 5 === 0) {\n          fontPosY2 = p5.random(-100, 100) + height / 2;\n          fontsize2 = p5.random(10, 20);\n        }\n\n        p5.blendMode(p5.BLEND);\n        p5.fill(250, p5.random(50, 100));\n        p5.textSize(fontsize);\n        if (messages3 != null) p5.text(messages3[readid].long_name, 10, fontPosY);\n        p5.textSize(fontsize2);\n        p5.fill(200, 60);\n        if (formatted_address != null) p5.text(formatted_address, 10, fontPosY2); //-----------------\n\n        p5.textAlign(p5.CENTER, p5.CENTER);\n        p5.textSize(14);\n        p5.fill(150, 60);\n\n        if (checkJson) {\n          if (objs == null) p5.text(hash, width / 2, height - height * 0.05);else {\n            if (p5.frameCount % 30 == 0) radHash = p5.int(p5.random(objs.length));\n            p5.text(objs[radHash].name, width / 2, height - height * 0.05);\n          }\n        } else p5.text(\"OFFLINE\", width / 2, height - height * 0.05);\n      } // drawFrame(p5,width,height);\n\n\n      p5.easycam.endHUD();\n    } //-------------------------------------------slitscan\n\n    {\n      //-----\n      if (slitCount < 640) {\n        rx = rx + parseInt(shuffleBag.current.random() * 10 - 5);\n        ry = ry + parseInt(shuffleBag.current.random() * 4 - 2);\n\n        if (slitCount === 0) {\n          pg.background(130);\n        }\n\n        pg.copy(img, rx, ry, 5, 320, slitCount, 0, 5, 640);\n        slitCount = slitCount + 5;\n\n        if (slitCount === 640) {\n          pg.image(landImg[mapId], 0, 0, 640, 640);\n\n          if (jsonData.error_message != null) {\n            console.log(\"json can't load\");\n            jsonData = jsonDefult;\n            checkJson = false; // console.log(jsonData);\n          } else {\n            console.log(\"loaded\");\n            checkJson = true; // console.log(jsonData);\n          }\n\n          messages = jsonData.results;\n\n          for (let i = 0; i < messages.length; i++) obj[i] = messages[i];\n\n          messages2 = obj[0];\n          messages3 = messages2.address_components;\n          formatted_address = messages2.formatted_address;\n        }\n      } // p5.image(img,0,-3,5,3);\n      // p5.image(pg,0,0,5,3);\n\n    } //-------------------------------------------textAnimation\n    //-------------------------------------------\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw,\n    windowResized: handleResize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomStyle, \"eAcgvS7ZIhq58SkvxAYMJjr24hY=\");\n\n_c = CustomStyle;\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.,\n    mod2: 0.8,\n    color1: 'rgb(70,70,70)',\n    background: 'rgb(30,30,30)'\n  }\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomStyle\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js"],"names":["React","useRef","Sketch","MersenneTwister","Mappa","key2","mappa","jsonAddress","jsonData","img","img2","back","back2","rx","ry","slitCount","mapId","myMap","pg","displace","mosaic","source","mapDefult","jsonDefult","radlng","radlat","radPlace","inconsolata","sobel","pg2","rr","gg","bb","t0","t1","t2","t3","t4","t5","t6","t7","place","land","landImg","messages","messages2","messages3","readid","formatted_address","checkJson","fontsize","fontPosY","fontsize2","fontPosY2","obj","objs","checkDot","checkCount","runAngle","dis","radHash","frameCountPerCicle","CFrameCount","CProgressR","CQuadEaseInR","CQuadEaseOutR","CQuartEaseInR","CQuartEaseOutR","DEFAULT_SIZE","CustomStyle","block","canvasRef","attributesRef","width","height","handleResize","mod1","mod2","color1","background","shuffleBag","hoistedValue","hash","preload","p5","loadFont","loadShader","loadModel","loadImage","loadJSON","seed","parseInt","slice","console","log","current","newRad","int","random","i","temp","nf","lat","lng","transactions","map","t","invert","dir","name","z","radius","options","zoom","scale","format","language","maptype","staticMap","responseImg","imgUrl","noresponseImg","getRequestImg","url","httpDo","setup","canvasParentRef","createCanvas","WEBGL","parent","pixelDensity","createGraphics","image","easycam","createEasyCam","distance","center","setDistanceMin","setDistanceMax","noStroke","textureWrap","CLAMP","textSize","textAlign","LEFT","CENTER","textFont","attributes","display_type","trait_type","value","draw","updateCProgress","red","green","blue","blendMode","BLEND","perspective","PI","abs","millis","rotateZ","rotateX","rotateY","shader","setUniform","checkInvert","frameCount","checkNum","Math","stroke","strokeWeight","e","lerp","point","fill","model","resetShader","push","noFill","translate","box","pop","length","ellipse","sphere","rect","text","cameraZoom","getDistance","gridDist","beginHUD","SCREEN","float","line","j","k","long_name","endHUD","copy","error_message","results","address_components","styleMetadata","description","creator_name","sq","pow"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js';\n//-------------------------------------------\nconst key2 = 'AIzaSyB68yPc_unBU9fvPHyhfBqckW0EI38vqR4';\nconst mappa = new Mappa('Google', key2);\nlet jsonAddress,jsonData;\nlet img,img2,back,back2;\nlet rx = 160,ry = 160,slitCount = 0,mapId=2,myMap ;\nlet pg,displace,mosaic,source,mapDefult,jsonDefult;\nlet radlng,radlat,radPlace,inconsolata,sobel,pg2;\nlet rr=0,gg=0,bb=0;\nlet t0={'name':'United States','lat':38.933,'lng':-109.699};\nlet t1={'name':'Taiwan','lat':23.95,'lng':120.68};\nlet t2={'name':'Canada','lat':52.61,'lng':-72.074};\nlet t3={'name':'Australia','lat':-35.30,'lng':149.12};\nlet t4={'name':'Newtown','lat':-41.30,'lng':174.78};\nlet t5={'name':'United Kingdom','lat':51.50,'lng':-0.12};\nlet t6={'name':'China','lat':39.91,'lng':116.39};\nlet t7={'name':'Russia','lat':62.90,'lng':147.70};\nlet place=[t0,t1,t2,t3,t4,t5,t6,t7];\nlet land=[],landImg=[];\nvar messages, messages2,messages3,readid=0;\nlet formatted_address,checkJson=false;\nlet fontsize=20,fontPosY=50;\nlet fontsize2=20,fontPosY2=50;\nvar obj=[],objs;\nlet checkDot=[2000];\nlet checkCount=0,runAngle=0,dis=120,radHash=0;\n//-------------------------------------------\nvar frameCountPerCicle = 200;\nvar CFrameCount;\nvar CProgressR,CQuadEaseInR,CQuadEaseOutR,CQuartEaseInR,CQuartEaseOutR;\n//-------------------------------------------\nlet DEFAULT_SIZE = 500;\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.15, // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'rgb(255,255,255)',\n  background = 'rgb(30,30,30)',\n}) => {\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const { hash } = block;\n  //-------------------------------------------\n  const preload = (p5) => {\n    inconsolata = p5.loadFont('HindGuntur-Light.ttf');\n    displace = p5.loadShader('shader/displace.vert', 'shader/displace.frag');\n    mosaic = p5.loadShader('shader/mosaic.vert', 'shader/mosaic.frag');\n    sobel=p5.loadShader('shader/sobel.vert', 'shader/sobel.frag');\n    land[0]=p5.loadModel('model/cone3.obj');\n    land[1]=p5.loadModel('model/cube3.obj');\n    land[2]=p5.loadModel('model/cross3.obj');\n    land[3]=p5.loadModel('model/quad.obj');\n    landImg[0]=p5.loadImage(\"model/cone3.png\");\n    landImg[1]=p5.loadImage(\"model/cube3.png\");\n    landImg[2]=p5.loadImage(\"model/cross3.png\");\n    landImg[3]=p5.loadImage(\"model/quad4.png\");\n    mapDefult=p5.loadImage(\"model/map.png\");\n    jsonDefult=p5.loadJSON(\"data.json\");\n    //---------------------------\n    let seed = parseInt(hash.slice(0, 16), 16);\n    console.log(hash);\n    // console.log(seed);\n    shuffleBag.current = new MersenneTwister(seed);\n    // console.log(objs);\n    let newRad=p5.int(p5.random(1,30));\n    for(let i=0;i<newRad;i++){\n      let temp=shuffleBag.current.random();\n    }\n    radPlace=parseInt(shuffleBag.current.random()*6);\n    radlat  =p5.nf(place[radPlace].lat + shuffleBag.current.random()*0.08-0.04,2,3);\n    radlng  =p5.nf(place[radPlace].lng + shuffleBag.current.random()*0.08-0.04,2,3);\n    // mapId   = 3;\n    mapId   = parseInt(shuffleBag.current.random()*4);\n    dis = parseInt(shuffleBag.current.random()*240)+60;\n\n    objs = block.transactions.map((t) => {\n      let seed = parseInt(t.hash.slice(0, 16), 16);\n      let invert=shuffleBag.current.random();\n      // console.log(invert);\n      let dir=1;\n      if(invert>0.5)dir=1;\n      else dir=-1;\n      return {\n        name:t.hash,\n        z: (shuffleBag.current.random()*2+1)*dir,\n        radius: seed / 500000000000000000,\n      };\n    });\n    //---------------------------\n    const options = {\n      lat: radlat,\n      lng: radlng,\n      zoom: 16,\n      width: 640,\n      height: 640,\n      scale: 1,\n      format: 'PNG',\n      language: 'en',\n      maptype: 'satellite',\n    };\n    console.log(place[radPlace],options.lat,options.lng);\n    //---------------------------\n    jsonAddress=\"https://maps.googleapis.com/maps/api/geocode/json?language=en&latlng=\"+options.lat+\",\"+options.lng+\"&key=\"+key2;\n    jsonData=p5.loadJSON(jsonAddress);\n    jsonDefult=p5.loadJSON(\"data.json\")\n    //---------------------------\n    // img = p5.loadImage(myMap.imgUrl);\n    // console.log(myMap.imgUrl);\n    //---------------------------\n    myMap = mappa.staticMap(options);\n    function responseImg(){img = p5.loadImage(myMap.imgUrl);}\n    function noresponseImg(){img = mapDefult;}\n    //---------------------------\n    function getRequestImg(url)  { p5.httpDo(url, \"GET\", false, responseImg,  noresponseImg);}\n    getRequestImg(myMap.imgUrl);\n    //---------------------------\n\n    //-------------------------------------------\n  }\n  //-------------------------------------------\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    p5.pixelDensity(2);\n    canvasRef.current = p5;\n    //-------------------------------------------\n    source = p5.createGraphics(640, 640);\n    pg = p5.createGraphics(640, 640);\n    img2 = p5.createGraphics(640, 640);\n\n    //-------------------------------------------\n    img2.background(0);\n    img2.image(img,0,0,660,660);\n    p5.easycam = p5.createEasyCam({distance:dis,center: [0,5,0] });\n    p5.easycam.setDistanceMin(60);\n    p5.easycam.setDistanceMax(300);\n    p5.noStroke();\n    p5.textureWrap(p5.CLAMP);\n    source.image(img, 0, 0);\n    p5.textSize(0.10);\n    p5.textAlign(p5.LEFT, p5.CENTER);\n    p5.textFont(inconsolata);\n    //-------------------------------------------\n\n    //-------------------------------------------\n    attributesRef.current = () => {\n      return {\n        // This is called when the final image is generated, when creator opens the Mint NFT modal.\n        // should return an object structured following opensea/enjin metadata spec for attributes/properties\n        // https://docs.opensea.io/docs/metadata-standards\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md#erc-1155-metadata-uri-json-schema\n\n        attributes: [\n          {\n            display_type: 'number',\n            trait_type: 'your trait here number',\n            value: hoistedValue.current, // using the hoisted value from within the draw() method, stored in the ref.\n          },\n\n          {\n            trait_type: 'your trait here text',\n            value: 'replace me',\n          },\n        ],\n      };\n    };\n  };\n\n  const draw = (p5) => {\n    // let WIDTH = width;\n    // let HEIGHT = height;\n    // let DIM = Math.min(WIDTH, HEIGHT);\n    // let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    rr=p5.red(color1)/510;\n    gg=p5.green(color1)/510;\n    bb=p5.blue(color1)/510;\n    //-------------------------------------------mainShape\n    {\n      p5.background(background);\n      p5.blendMode(p5.BLEND);\n      p5.noStroke();\n      p5.textSize(0.10);\n      p5.perspective(60 * p5.PI/180, width/height, 0.1, 5000);\n      // p5.normalMaterial();\n      back=p5.abs(((p5.millis()%6000) / 6000)-0.5)-0.5;\n      back2=p5.millis() / 3000;\n      p5.rotateZ(back);\n      p5.rotateX(back);\n      p5.rotateY(back2);\n      p5.shader(displace);\n      displace.setUniform(\"colormap\", pg);\n      displace.setUniform(\"mapId\", mapId);\n      displace.setUniform(\"mod1\", mod1);\n      displace.setUniform(\"mod2\", mod2);\n      displace.setUniform(\"color1\", [rr,gg,bb]);\n      // console.log([rr,gg,bb]);\n      let checkInvert=(p5.frameCount%600);\n      // console.log(p5.frameCount);\n      let checkNum;\n      if(checkInvert<100)checkNum=Math.random();\n      // console.log(checkNum);\n      if(checkNum>0.8)displace.setUniform(\"n\", 0);\n      else displace.setUniform(\"n\", 1);\n\n      displace.setUniform(\"uFrameCount\", p5.frameCount);\n      p5.scale(12);\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      for(let i=0;i<100;i++){\n        let e = p5.lerp(3, -3, i/100);\n        p5.point(0,e,0);\n      }\n      p5.noStroke();\n      p5.fill(255);\n      p5.model(land[mapId]);\n      p5.resetShader();\n\n      //-----------------------------draw box\n      p5.push();\n      {\n        p5.noFill();\n        p5.stroke(100,10);\n        if(mapId==0){\n          p5.translate(0,0.5,0);\n          p5.scale(0.8,0.2,0.8);\n        }\n        else if(mapId==1){\n          p5.translate(0,0.1,0);\n          p5.scale(0.9,0.25,0.9);\n        }\n        else if(mapId==2){\n          p5.scale(1,0.2,1);\n        }\n        else if(mapId==3){\n          p5.translate(0,0.4,0);\n          p5.scale(1,0.2,1);\n        }\n        p5.box(8);\n      }\n      p5.pop();\n\n      //-----------------------------draw transaction\n      p5.noFill();\n      for(let i=0;i<objs.length;i++){\n        p5.push();\n        p5.translate(0,objs[i].z,0);\n        p5.rotateX(3.14/2);\n        if(i==radHash){\n          p5.stroke(255,0,0,150);\n          p5.strokeWeight(2.0);\n        }else{\n          p5.stroke(200,100);\n          p5.strokeWeight(0.5);\n        }\n        p5.ellipse(0,0,objs[i].radius,objs[i].radius,20);\n        p5.pop();\n      }\n      //-----------------------------\n\n\n    }\n    //-------------------------------------------otherLine\n    {\n      p5.resetShader();\n      p5.push();\n      p5.fill(255);\n      p5.translate(0,3,0);\n      p5.sphere(0.05,20,20);\n      p5.translate(0,-6,0);\n      p5.sphere(0.05,20,20);\n      p5.pop();\n\n\n\n      p5.resetShader();\n      p5.push();\n      p5.fill(255);\n      p5.rotateY(p5.millis() / 2300);\n      p5.translate(2,-2,0);\n      p5.shader(mosaic);\n      mosaic.setUniform(\"colormap\", img);\n      mosaic.setUniform(\"color1\", [rr,gg,bb]);\n      p5.stroke(255);\n      p5.strokeWeight(0.2);\n      p5.rect(0,0,1,0.7);\n      p5.strokeWeight(2);\n      for(let i=0;i<20;i++){\n        let e = p5.lerp(0.35, 1.6, i/20);\n        p5.point(-0.6,e,0);\n      }\n      for(let i=0;i<5;i++){\n        let e = p5.lerp(-0.2, -0.6, i/5);\n        p5.point(e,0.35,0);\n      }\n\n\n      p5.resetShader();\n      p5.noFill();\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      p5.rect(0,0,1,0.70);\n      p5.strokeWeight(4);\n      p5.point(-0.6,1.6,0);\n      p5.point(-0.2,0.35,0);\n      p5.pop();\n\n      p5.push();\n      p5.fill(255);\n      p5.rotateY(p5.millis() / 1100);\n      p5.translate(2.5,-2.5,0);\n      p5.stroke(255);\n      p5.strokeWeight(0.2);\n      p5.strokeWeight(2);\n      for(let i=0;i<20;i++){\n        let e = p5.lerp(0.35, 2.2, i/20);\n        p5.point(-0.6,e,0);\n      }\n      for(let i=0;i<5;i++){\n        let e = p5.lerp(-0.3, -0.6, i/5);\n        p5.point(e,0.35,0);\n      }\n      p5.strokeWeight(4);\n      p5.point(-0.6,2.2,0);\n      p5.point(-0.3,0.35,0);\n      p5.fill(255);\n      p5.text('LAT:'+radlat, -0.2, 0.2);\n      p5.text('LNG:'+radlng, -0.2, 0.4);\n      p5.pop();\n    }\n    //-------------------------------------------drawHud\n    {\n      let cameraZoom=p5.easycam.getDistance();\n      let gridDist=p5.int(p5.map(cameraZoom,60,300,15,6));\n      // console.log(cameraZoom);\n      //-------------------------------------------\n      // p5.push();\n      // {\n      //   // p5.resetShader();\n      //   // let ro=p5.easycam.getRotation();\n      //   // // console.log(ro);\n      //   // // ro[0]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[1]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[2]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // ro[4]=p5.map(ro[0],-1,1,0,6.28);\n      //   // // p5.rotate(ro);\n      //   // p5.shader(sobel);\n      //   // sobel.setUniform(\"resolution\", [640.0,640.0]);\n      //   // sobel.setUniform(\"colormap\", img);\n      //   p5.fill(255);\n      //   p5.rect(0,0,1,1);\n      //   // p5.box(3);\n      // }\n      // p5.pop();\n\n      //-------------------------------------------\n      p5.easycam.beginHUD();\n      p5.push();\n      {\n        p5.resetShader();\n        p5.blendMode(p5.SCREEN);\n        sobel.setUniform(\"resolution\", [640.0,640.0]);\n        sobel.setUniform(\"colormap\", img2);\n        if(p5.frameCount%10==0)sobel.setUniform(\"pos\", [Math.random()*2.0-1.0,Math.random()*2.0-1.0]);\n        // sobel.setUniform(\"vol\",vol );\n        sobel.setUniform(\"time\", p5.float(p5.frameCount%100000)/1000.0);\n        p5.shader(sobel);\n        p5.fill(100,100);\n        p5.rect(0,0,width,height);\n      }\n      p5.pop();\n      //-----------------\n      p5.resetShader();\n      {\n        p5.fill(100,100)\n        // text(place[radPlace].name,20,60);\n        p5.strokeWeight(1.0);\n        for (var i = 0; i < width; i += gridDist*10) {\n          p5.stroke(80,50);\n          p5.line(i, 0, i, height);\n          p5.line(width, i, 0, i);\n        }\n        checkCount=0;\n        if(p5.frameCount%30===0){\n          for (let i = 0; i < width; i += gridDist*10) {\n            for (let j = 0; j < height; j += gridDist*10) {\n              let k=p5.random(10);\n              if(k>5)checkDot[checkCount]=false;\n              else checkDot[checkCount]=true;\n              if(checkDot[checkCount])p5.point(i,j);\n              checkCount++;\n            }\n          }\n        }\n        checkCount=0;\n        p5.strokeWeight(3.0);\n        p5.stroke(150,100)\n        for (let i = 0; i < width; i += gridDist*10) {\n          for (let j = 0; j < height; j += gridDist*10) {\n            if(checkDot[checkCount])p5.point(i,j);\n            checkCount++;\n          }\n        }\n      }\n      //-----------------\n      if (messages2!= null) {\n        if (p5.frameCount%20===0) {\n          fontPosY=p5.random(-100,100)+height/2;\n          fontsize=p5.random(20, 40);\n          readid=p5.int(p5.random(3));\n        }\n\n        if (p5.frameCount%5===0) {\n          fontPosY2=p5.random(-100,100)+height/2;\n          fontsize2=p5.random(10, 20);\n        }\n        p5.blendMode(p5.BLEND);\n        p5.fill(250,p5.random(50,100));\n        p5.textSize(fontsize);\n        if (messages3!=null)p5.text(messages3[readid].long_name, 10, fontPosY);\n\n        p5.textSize(fontsize2);\n        p5.fill(200,60);\n        if (formatted_address!=null)p5.text(formatted_address, 10, fontPosY2);\n        //-----------------\n        p5.textAlign(p5.CENTER,p5.CENTER);\n        p5.textSize(14);\n        p5.fill(150,60);\n\n      if(checkJson){\n\n        if(objs==null)p5.text(hash, width/2,height-height*0.05);\n        else {\n        if(p5.frameCount%30==0)radHash=p5.int(p5.random(objs.length));\n        p5.text(objs[radHash].name, width/2,height-height*0.05);\n        }\n      }\n      else p5.text(\"OFFLINE\", width/2,height-height*0.05);\n      }\n      // drawFrame(p5,width,height);\n      p5.easycam.endHUD();\n    }\n    //-------------------------------------------slitscan\n    {\n      //-----\n      if (slitCount < 640) {\n        rx = rx + parseInt(shuffleBag.current.random()*10-5);\n        ry = ry + parseInt(shuffleBag.current.random()*4-2);\n        if (slitCount === 0) {\n          pg.background(130);\n        }\n        pg.copy(img, rx, ry, 5, 320, slitCount, 0, 5, 640);\n        slitCount = slitCount + 5;\n        if (slitCount === 640) {\n          pg.image(landImg[mapId], 0, 0, 640, 640);\n\n          if(jsonData.error_message!=null){\n            console.log(\"json can't load\");\n            jsonData=jsonDefult;\n            checkJson=false;\n            // console.log(jsonData);\n          }else{\n            console.log(\"loaded\");\n            checkJson=true;\n            // console.log(jsonData);\n          }\n\n          messages = jsonData.results;\n          for (let i=0; i<messages.length; i++) obj[i]=messages[i];\n          messages2 = obj[0];\n          messages3=messages2.address_components;\n          formatted_address=messages2.formatted_address;\n        }\n      }\n\n    // p5.image(img,0,-3,5,3);\n    // p5.image(pg,0,0,5,3);\n    }\n    //-------------------------------------------textAnimation\n\n    //-------------------------------------------\n  };\n\n  return <Sketch preload={preload} setup={setup} draw={draw} windowResized={handleResize} />;\n};\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.,\n    mod2: 0.8,\n    color1: 'rgb(70,70,70)',\n    background: 'rgb(30,30,30)',\n  },\n};\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\nexport { styleMetadata };\n"]},"metadata":{},"sourceType":"module"}