{"ast":null,"code":"var _jsxFileName = \"/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js'; //-------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DEFAULT_SIZE = 500; //-------------------------------------------\n\nlet frameCountPerCicle = 200;\nlet CFrameCount, CQuartEaseInR, CQuartEaseOutR;\nlet CProgressR, CQuadEaseInR, CQuadEaseOutR;\nlet back, back2; //-------------------------------------------\n\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75,\n  // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)'\n}) => {\n  _s();\n\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const {\n    hash\n  } = block; //-------------------------------------------\n\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height, p5.WEBGL).parent(canvasParentRef);\n\n    canvasRef.current = p5; //-------------------------------------------\n    //-------------------------------------------\n\n    attributesRef.current = () => {\n      return {\n        attributes: [{\n          display_type: 'number',\n          trait_type: 'your trait here number',\n          value: hoistedValue.current\n        }, {\n          trait_type: 'your trait here text',\n          value: 'replace me'\n        }]\n      };\n    };\n  };\n\n  const draw = p5 => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5); //-------------------------------------------mainShape\n\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI / 180, width / height, 0.1, 5000);\n    back = p5.abs(p5.millis() % 6000 / 6000 - 0.5) - 0.5;\n    back2 = p5.millis() / 3000; //------------------------------------------- reset shuffle bag\n\n    {\n      let seed = parseInt(hash.slice(0, 16), 16);\n      shuffleBag.current = new MersenneTwister(seed);\n      let objs = block.transactions.map(t => {\n        let seed = parseInt(t.hash.slice(0, 16), 16);\n        return {\n          y: shuffleBag.current.random(),\n          x: shuffleBag.current.random(),\n          radius: seed / 1000000000000000\n        };\n      }); //\n\n      hoistedValue.current = 42;\n      objs.map((dot, i) => {\n        p5.stroke(color1);\n        p5.strokeWeight(1 + mod2 * 10);\n        p5.ellipse(200 * dot.y * 6 * M, 100 * dot.x * 6 * M, dot.radius * M * mod1);\n      });\n    } //-------------------------------------------\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: handleResize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomStyle, \"eAcgvS7ZIhq58SkvxAYMJjr24hY=\");\n\n_c = CustomStyle;\nexport default CustomStyle;\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1: 'hsl(170,90%,30%)',\n    background: 'hsl(110,80%,10%)'\n  }\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomStyle\");","map":{"version":3,"sources":["/Users/aluan/Documents/GitHub/GeoPunk/src/CustomStyle.js"],"names":["React","useRef","Sketch","MersenneTwister","Mappa","DEFAULT_SIZE","frameCountPerCicle","CFrameCount","CQuartEaseInR","CQuartEaseOutR","CProgressR","CQuadEaseInR","CQuadEaseOutR","back","back2","CustomStyle","block","canvasRef","attributesRef","width","height","handleResize","mod1","mod2","color1","background","shuffleBag","hoistedValue","hash","setup","p5","canvasParentRef","_p5","createCanvas","WEBGL","parent","current","attributes","display_type","trait_type","value","draw","WIDTH","HEIGHT","DIM","Math","min","M","updateCProgress","blendMode","BLEND","noStroke","textSize","perspective","PI","abs","millis","seed","parseInt","slice","objs","transactions","map","t","y","random","x","radius","dot","i","stroke","strokeWeight","ellipse","styleMetadata","name","description","image","creator_name","options","frameCount","sq","pow"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport Sketch from 'react-p5';\nimport MersenneTwister from 'mersenne-twister';\nimport Mappa from \"mappa.js\";\nimport 'p5.easycam.js';\n//-------------------------------------------\nlet DEFAULT_SIZE = 500;\n//-------------------------------------------\nlet frameCountPerCicle = 200;\nlet CFrameCount,CQuartEaseInR,CQuartEaseOutR;\nlet CProgressR,CQuadEaseInR,CQuadEaseOutR;\nlet back,back2;\n//-------------------------------------------\nconst CustomStyle = ({\n  block,\n  canvasRef,\n  attributesRef,\n  width,\n  height,\n  handleResize,\n  mod1 = 0.75, // Example: replace any number in the code with mod1, mod2, or color values\n  mod2 = 0.25,\n  color1 = 'hsl(170,90%,10%)',\n  background = 'hsl(110,80%,10%)',\n}) => {\n  const shuffleBag = useRef();\n  const hoistedValue = useRef();\n  const { hash } = block;\n  //-------------------------------------------\n  const setup = (p5, canvasParentRef) => {\n    // Keep reference of canvas element for snapshots\n    let _p5 = p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    canvasRef.current = p5;\n    //-------------------------------------------\n    //-------------------------------------------\n    attributesRef.current = () => {\n      return {\n        attributes: [\n          {\n            display_type: 'number',\n            trait_type: 'your trait here number',\n            value: hoistedValue.current,\n          },\n          {\n            trait_type: 'your trait here text',\n            value: 'replace me',\n          },\n        ],\n      };\n    };\n  };\n\n  const draw = (p5) => {\n    let WIDTH = width;\n    let HEIGHT = height;\n    let DIM = Math.min(WIDTH, HEIGHT);\n    let M = DIM / DEFAULT_SIZE;\n    updateCProgress(p5);\n    //-------------------------------------------mainShape\n    p5.background(background);\n    p5.blendMode(p5.BLEND);\n    p5.noStroke();\n    p5.textSize(0.10);\n    p5.perspective(60 * p5.PI/180, width/height, 0.1, 5000);\n    back=p5.abs(((p5.millis()%6000) / 6000)-0.5)-0.5;\n    back2=p5.millis() / 3000;\n    //------------------------------------------- reset shuffle bag\n    {\n      let seed = parseInt(hash.slice(0, 16), 16);\n      shuffleBag.current = new MersenneTwister(seed);\n      let objs = block.transactions.map((t) => {\n        let seed = parseInt(t.hash.slice(0, 16), 16);\n        return {\n          y: shuffleBag.current.random(),\n          x: shuffleBag.current.random(),\n          radius: seed / 1000000000000000,\n        };\n      });\n\n      //\n      hoistedValue.current = 42;\n\n      objs.map((dot, i) => {\n        p5.stroke(color1);\n        p5.strokeWeight(1 + mod2 * 10);\n        p5.ellipse(\n          200 * dot.y * 6 * M,\n          100 * dot.x * 6 * M,\n          dot.radius * M * mod1\n        );\n      });\n    }\n    //-------------------------------------------\n  };\n\n  return <Sketch setup={setup} draw={draw} windowResized={handleResize} />;\n};\n\nexport default CustomStyle;\n\nconst styleMetadata = {\n  name: '',\n  description: '',\n  image: '',\n  creator_name: '',\n  options: {\n    mod1: 0.15,\n    mod2: 0.7,\n    color1 : 'hsl(170,90%,30%)',\n    background : 'hsl(110,80%,10%)'\n  },\n};\n\nfunction updateCProgress(p5) {\n  CFrameCount = p5.frameCount % frameCountPerCicle;\n  CProgressR = CFrameCount / frameCountPerCicle;\n  CQuadEaseInR = CProgressR * CProgressR;\n  CQuadEaseOutR = -p5.sq(CProgressR - 1) + 1;\n  CQuartEaseInR = p5.pow(CProgressR, 4);\n  CQuartEaseOutR = -p5.pow(CProgressR - 1, 4) + 1;\n}\n\nexport { styleMetadata };\n"]},"metadata":{},"sourceType":"module"}